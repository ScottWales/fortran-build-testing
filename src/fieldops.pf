! Field operations

! An operation gets evaluated when it's assigned to a plain field
@test
subroutine assign()
    use field_mod
    type(scalarfield) :: sf
    type(fieldop_sf)  :: op

    sf = op
end subroutine

! Performing operations on a field creates a statement tree
@test
subroutine operations()
    use field_mod
    type(scalarfield) :: sf

    sf = 1.0 * sf
end subroutine

! Convert between scalar and vector fields
@test
subroutine convert()
    use field_mod
    type(scalarfield) :: sf
    type(vectorfield) :: vf

    vf = div(sf)
end subroutine

! Chain operations
@test
subroutine chain()
    use field_mod
    type(scalarfield) :: sf
    type(vectorfield) :: vf

    vf = div(1.0 * sf)
end subroutine
    
