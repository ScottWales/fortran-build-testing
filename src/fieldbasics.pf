! Basic stuff a field needs to do, just making sure types and overloads work

@test
subroutine construct()
    use field_mod
    type(field) :: a

    a%placeholder = 0
end subroutine

@test
subroutine set()
    use field_mod
    type(field) :: a

    a = 1
    a = 9.99
end subroutine

@test
subroutine assign()
    use field_mod
    type(field) :: a, b

    a = 1
    b = a
end subroutine

@test
subroutine add()
    use field_mod
    type(field) :: a, b, c

    a = 1
    b = a

    c = a + b
end subroutine

@test
subroutine scale()
    use field_mod
    type(field) :: a, b

    a = 1
    b = a*(-1)
    b = (-1)*a

    b = a / 2
end subroutine

@test
subroutine negate()
    use field_mod
    type(field) :: a, b

    a = 1
    b = -a
end subroutine

@test
subroutine subtract()
    use field_mod
    type(field) :: a, b, c

    a = 1
    b = a

    c = a - b
end subroutine
